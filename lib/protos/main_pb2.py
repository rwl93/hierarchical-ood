# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lib/protos/main.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15lib/protos/main.proto\x12\x1bhierarchical_ood.lib.protos\"\x91\x0f\n\x04Main\x12?\n\x05model\x18\x01 \x01(\x0e\x32\'.hierarchical_ood.lib.protos.Main.Model:\x07SOFTMAX\x12\x1d\n\x08\x64\x61ta_dir\x18\x02 \x01(\t:\x0b\x64\x61ta/coarse\x12#\n\x0chierarchy_fn\x18\x03 \x01(\t:\rpruned-wn.pth\x12\x1d\n\x0fmin_norm_factor\x18\x04 \x01(\x02:\x04\x30.05\x12>\n\x0ctrain_params\x18\x05 \x01(\x0b\x32(.hierarchical_ood.lib.protos.TrainParams\x12\x35\n\x03sgd\x18\x06 \x01(\x0b\x32&.hierarchical_ood.lib.protos.SGDParamsH\x00\x12\x37\n\x04\x61\x64\x61m\x18\x07 \x01(\x0b\x32\'.hierarchical_ood.lib.protos.AdamParamsH\x00\x12\x37\n\x02\x63\x65\x18\x08 \x01(\x0b\x32).hierarchical_ood.lib.protos.CrossEntropyH\x01\x12>\n\x03\x62\x63\x65\x18\t \x01(\x0b\x32/.hierarchical_ood.lib.protos.BinaryCrossEntropyH\x01\x12K\n\x04hbce\x18\n \x01(\x0b\x32;.hierarchical_ood.lib.protos.HierarchicalBinaryCrossEntropyH\x01\x12;\n\x02hl\x18\x0b \x01(\x0b\x32-.hierarchical_ood.lib.protos.HierarchicalLossH\x01\x12\x32\n\x02ml\x18\x0c \x01(\x0b\x32$.hierarchical_ood.lib.protos.MOSLossH\x01\x12:\n\x04\x61msl\x18\r \x01(\x0b\x32*.hierarchical_ood.lib.protos.AMSoftmaxLossH\x01\x12:\n\x04\x61mcl\x18\x0e \x01(\x0b\x32*.hierarchical_ood.lib.protos.AMCascadeLossH\x01\x12\x15\n\x04seed\x18\x0f \x01(\x05:\x07\x31\x32\x33\x34\x35\x36\x37\x12\x17\n\x0crepeat_iters\x18\x10 \x01(\x05:\x01\x31\x12\x16\n\x07no_save\x18\x11 \x01(\x08:\x05\x66\x61lse\x12\x16\n\x07verbose\x18\x12 \x01(\x08:\x05\x66\x61lse\x12\x11\n\x07savedir\x18\x13 \x01(\t:\x00\x12\x1a\n\x08\x62\x61\x63kbone\x18\x14 \x01(\t:\x08resnet50\x12:\n\nsoftmax_mc\x18\x15 \x01(\x0b\x32$.hierarchical_ood.lib.protos.SoftmaxH\x02\x12L\n\x06ilr_mc\x18\x16 \x01(\x0b\x32:.hierarchical_ood.lib.protos.IndependentLogisticRegressorsH\x02\x12?\n\x07hilr_mc\x18\x17 \x01(\x0b\x32,.hierarchical_ood.lib.protos.HierarchicalILRH\x02\x12:\n\ncascade_mc\x18\x18 \x01(\x0b\x32$.hierarchical_ood.lib.protos.CascadeH\x02\x12\x46\n\x10\x63\x61scadefchead_mc\x18\x19 \x01(\x0b\x32*.hierarchical_ood.lib.protos.CascadeFCHeadH\x02\x12\x46\n\x10softmaxfchead_mc\x18\x1a \x01(\x0b\x32*.hierarchical_ood.lib.protos.SoftmaxFCHeadH\x02\x12\x36\n\x06mos_mc\x18\x1b \x01(\x0b\x32$.hierarchical_ood.lib.protos.MOSConfH\x02\x12\x38\n\x06\x61ms_mc\x18\x1c \x01(\x0b\x32&.hierarchical_ood.lib.protos.AMSoftmaxH\x02\x12\x38\n\x06\x61mc_mc\x18\x1d \x01(\x0b\x32&.hierarchical_ood.lib.protos.AMCascadeH\x02\x12\x15\n\rfar_ood_dsets\x18\x1e \x03(\t\x12\x1f\n\x15\x64istribution_strategy\x18\x1f \x01(\t:\x00\x12\x1f\n\x10resume_from_ckpt\x18  \x01(\x08:\x05\x66\x61lse\x12\x1c\n\x12\x66inetune_from_ckpt\x18! \x01(\t:\x00\x12\x1a\n\x0b\x65mbed_layer\x18\" \x01(\x08:\x05\x66\x61lse\x12%\n\x16spectral_normalization\x18# \x01(\x08:\x05\x66\x61lse\x12\x15\n\x07sncoeff\x18$ \x01(\x02:\x04\x30.97\x12\x12\n\x07sniters\x18% \x01(\x05:\x01\x31\x12\x12\n\x06snatol\x18& \x01(\x02:\x02-1\x12\x12\n\x06snrtol\x18\' \x01(\x02:\x02-1\"\x81\x01\n\x05Model\x12\x0b\n\x07SOFTMAX\x10\x01\x12\x07\n\x03ILR\x10\x02\x12\x08\n\x04HILR\x10\x03\x12\x0b\n\x07\x43\x41SCADE\x10\x04\x12\x11\n\rCASCADEFCHEAD\x10\x05\x12\x11\n\rSOFTMAXFCHEAD\x10\x06\x12\x07\n\x03MOS\x10\x07\x12\r\n\tAMSOFTMAX\x10\x08\x12\r\n\tAMCASCADE\x10\tB\x0b\n\toptimizerB\x06\n\x04lossB\x0e\n\x0cmodel_config\"\xb9\x01\n\x0bTrainParams\x12\x12\n\x06\x65pochs\x18\x01 \x01(\x05:\x02\x39\x30\x12\x16\n\nbatch_size\x18\x02 \x01(\x05:\x02\x36\x34\x12\x17\n\rcheckpoint_fn\x18\x03 \x01(\t:\x00\x12\x10\n\x06log_fn\x18\x04 \x01(\t:\x00\x12\x18\n\tfreeze_bb\x18\x05 \x01(\x08:\x05\x66\x61lse\x12\x1b\n\x0c\x66reeze_bb_bn\x18\x06 \x01(\x08:\x05\x66\x61lse\x12\x1c\n\rbb_pretrained\x18\x07 \x01(\x08:\x05\x66\x61lse\"\xdd\x01\n\tSGDParams\x12\x1a\n\rlearning_rate\x18\x01 \x01(\x02:\x03\x30.1\x12\x15\n\x08momentum\x18\x02 \x01(\x02:\x03\x30.9\x12\x1c\n\x0cweight_decay\x18\x03 \x01(\x02:\x06\x30.0001\x12\x17\n\x08nesterov\x18\x04 \x01(\x08:\x05\x66\x61lse\x12\x17\n\x0cwarmup_iters\x18\x05 \x01(\x05:\x01\x35\x12\x1a\n\rwarmup_factor\x18\x06 \x01(\x02:\x03\x30.1\x12\x1c\n\x0flr_decay_factor\x18\x07 \x01(\x02:\x03\x30.1\x12\x13\n\x07lr_step\x18\x08 \x03(\x02\x42\x02\x10\x01\"\xae\x01\n\nAdamParams\x12\x1a\n\rlearning_rate\x18\x01 \x01(\x02:\x03\x30.1\x12\x1c\n\x0cweight_decay\x18\x02 \x01(\x02:\x06\x30.0001\x12\x17\n\x0cwarmup_iters\x18\x03 \x01(\x05:\x01\x35\x12\x1a\n\rwarmup_factor\x18\x04 \x01(\x02:\x03\x30.1\x12\x1c\n\x0flr_decay_factor\x18\x05 \x01(\x02:\x03\x30.1\x12\x13\n\x07lr_step\x18\x06 \x03(\x02\x42\x02\x10\x01\"\t\n\x07Softmax\"*\n\rSoftmaxFCHead\x12\x19\n\rfc_head_sizes\x18\x01 \x03(\x05\x42\x02\x10\x01\"\x1f\n\x1dIndependentLogisticRegressors\"\x11\n\x0fHierarchicalILR\"\t\n\x07\x43\x61scade\"M\n\rCascadeFCHead\x12\x19\n\rfc_head_sizes\x18\x01 \x03(\x05\x42\x02\x10\x01\x12!\n\x13split_fchead_layers\x18\x02 \x01(\x08:\x04true\"$\n\x07MOSConf\x12\x19\n\rfc_head_sizes\x18\x01 \x03(\x05\x42\x02\x10\x01\"B\n\tAMSoftmax\x12\x19\n\rfc_head_sizes\x18\x01 \x03(\x05\x42\x02\x10\x01\x12\x1a\n\x0c\x66\x65\x61ture_norm\x18\x02 \x01(\x08:\x04true\"f\n\tAMCascade\x12\x19\n\rfc_head_sizes\x18\x01 \x03(\x05\x42\x02\x10\x01\x12\x1a\n\x0c\x66\x65\x61ture_norm\x18\x02 \x01(\x08:\x04true\x12\"\n\x13split_fchead_layers\x18\x03 \x01(\x08:\x05\x66\x61lse\"-\n\tLossRange\x12\x10\n\x05start\x18\x01 \x01(\x02:\x01\x30\x12\x0e\n\x03\x65nd\x18\x02 \x01(\x02:\x01\x30\"\x0e\n\x0c\x43rossEntropy\"\x14\n\x12\x42inaryCrossEntropy\" \n\x1eHierarchicalBinaryCrossEntropy\"\x88\x03\n\x10HierarchicalLoss\x12\x1b\n\rsynsetce_loss\x18\x01 \x01(\x08:\x04true\x12\x1c\n\rsoftpred_loss\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x1f\n\x10outlier_exposure\x18\x03 \x01(\x08:\x05\x66\x61lse\x12>\n\x0esynsetce_range\x18\x04 \x01(\x0b\x32&.hierarchical_ood.lib.protos.LossRange\x12>\n\x0esoftpred_range\x18\x05 \x01(\x0b\x32&.hierarchical_ood.lib.protos.LossRange\x12\x46\n\x16outlier_exposure_range\x18\x06 \x01(\x0b\x32&.hierarchical_ood.lib.protos.LossRange\x12\x18\n\tweight_ce\x18\x07 \x01(\x08:\x05\x66\x61lse\x12\x19\n\nfocal_loss\x18\x08 \x01(\x08:\x05\x66\x61lse\x12\x1b\n\x0c\x64\x65pth_weight\x18\t \x01(\x08:\x05\x66\x61lse\"\t\n\x07MOSLoss\".\n\rAMSoftmaxLoss\x12\r\n\x01s\x18\x01 \x01(\x02:\x02\x33\x30\x12\x0e\n\x01m\x18\x02 \x01(\x02:\x03\x30.4\"Z\n\rAMCascadeLoss\x12\r\n\x01s\x18\x01 \x01(\x02:\x02\x33\x30\x12\x0e\n\x01m\x18\x02 \x01(\x02:\x03\x30.5\x12\x13\n\x08s_factor\x18\x03 \x01(\x02:\x01\x31\x12\x15\n\x08m_factor\x18\x04 \x01(\x02:\x03\x30.4')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'lib.protos.main_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SGDPARAMS.fields_by_name['lr_step']._options = None
  _SGDPARAMS.fields_by_name['lr_step']._serialized_options = b'\020\001'
  _ADAMPARAMS.fields_by_name['lr_step']._options = None
  _ADAMPARAMS.fields_by_name['lr_step']._serialized_options = b'\020\001'
  _SOFTMAXFCHEAD.fields_by_name['fc_head_sizes']._options = None
  _SOFTMAXFCHEAD.fields_by_name['fc_head_sizes']._serialized_options = b'\020\001'
  _CASCADEFCHEAD.fields_by_name['fc_head_sizes']._options = None
  _CASCADEFCHEAD.fields_by_name['fc_head_sizes']._serialized_options = b'\020\001'
  _MOSCONF.fields_by_name['fc_head_sizes']._options = None
  _MOSCONF.fields_by_name['fc_head_sizes']._serialized_options = b'\020\001'
  _AMSOFTMAX.fields_by_name['fc_head_sizes']._options = None
  _AMSOFTMAX.fields_by_name['fc_head_sizes']._serialized_options = b'\020\001'
  _AMCASCADE.fields_by_name['fc_head_sizes']._options = None
  _AMCASCADE.fields_by_name['fc_head_sizes']._serialized_options = b'\020\001'
  _MAIN._serialized_start=55
  _MAIN._serialized_end=1992
  _MAIN_MODEL._serialized_start=1826
  _MAIN_MODEL._serialized_end=1955
  _TRAINPARAMS._serialized_start=1995
  _TRAINPARAMS._serialized_end=2180
  _SGDPARAMS._serialized_start=2183
  _SGDPARAMS._serialized_end=2404
  _ADAMPARAMS._serialized_start=2407
  _ADAMPARAMS._serialized_end=2581
  _SOFTMAX._serialized_start=2583
  _SOFTMAX._serialized_end=2592
  _SOFTMAXFCHEAD._serialized_start=2594
  _SOFTMAXFCHEAD._serialized_end=2636
  _INDEPENDENTLOGISTICREGRESSORS._serialized_start=2638
  _INDEPENDENTLOGISTICREGRESSORS._serialized_end=2669
  _HIERARCHICALILR._serialized_start=2671
  _HIERARCHICALILR._serialized_end=2688
  _CASCADE._serialized_start=2690
  _CASCADE._serialized_end=2699
  _CASCADEFCHEAD._serialized_start=2701
  _CASCADEFCHEAD._serialized_end=2778
  _MOSCONF._serialized_start=2780
  _MOSCONF._serialized_end=2816
  _AMSOFTMAX._serialized_start=2818
  _AMSOFTMAX._serialized_end=2884
  _AMCASCADE._serialized_start=2886
  _AMCASCADE._serialized_end=2988
  _LOSSRANGE._serialized_start=2990
  _LOSSRANGE._serialized_end=3035
  _CROSSENTROPY._serialized_start=3037
  _CROSSENTROPY._serialized_end=3051
  _BINARYCROSSENTROPY._serialized_start=3053
  _BINARYCROSSENTROPY._serialized_end=3073
  _HIERARCHICALBINARYCROSSENTROPY._serialized_start=3075
  _HIERARCHICALBINARYCROSSENTROPY._serialized_end=3107
  _HIERARCHICALLOSS._serialized_start=3110
  _HIERARCHICALLOSS._serialized_end=3502
  _MOSLOSS._serialized_start=3504
  _MOSLOSS._serialized_end=3513
  _AMSOFTMAXLOSS._serialized_start=3515
  _AMSOFTMAXLOSS._serialized_end=3561
  _AMCASCADELOSS._serialized_start=3563
  _AMCASCADELOSS._serialized_end=3653
# @@protoc_insertion_point(module_scope)
